#!/bin/bash
# Generated by CHARMM-GUI (http://www.charmm-gui.org) v3.7

# Get CPU IDs from "thisjob" output; if not available, fall back to SLURM_JOB_CPUS_LIST
cpu_ids=$(thisjob | grep CPU_IDs | sed -E 's/.*CPU_IDs=([^ ]+).*/\1/')
if [[ -z "$cpu_ids" ]]; then
    if [[ -z "$SLURM_JOB_CPUS_LIST" ]]; then
        echo "SLURM_JOB_CPUS_LIST is not set."
        exit 1
    else
        cpu_ids="$SLURM_JOB_CPUS_LIST"
    fi
fi

# Function to expand a CPU list (e.g., "1-2,20-21,42-45") into an array of individual cores
expand_cpu_list() {
    local list="$1"
    local expanded=()
    IFS=',' read -ra ranges <<< "$list"
    for range in "${ranges[@]}"; do
        if [[ "$range" == *"-"* ]]; then
            IFS='-' read -r start end <<< "$range"
            for (( i=start; i<=end; i++ )); do
                expanded+=("$i")
            done
        else
            expanded+=("$range")
        fi
    done
    echo "${expanded[@]}"
}

# Expand the allocated CPU IDs into an array
allocated=($(expand_cpu_list "$cpu_ids"))

# Input parameters (passed as command-line arguments)
NAMD_CORES="$1"   # Number of cores for NAMD
GPU_DEVICE="$2"   # GPU device to use

# Get the list for NAMD cores (first NAMD_CORES from the allocated list)
namd_cores_array=("${allocated[@]:0:$NAMD_CORES}")
namd_core_list=$(IFS=, ; echo "${namd_cores_array[*]}")

# Running NAMD on the specified CPU cores and GPU device
echo "Running NAMD on CPU cores: $namd_core_list and GPU device: $GPU_DEVICE"

# Variables
equi_prefix="step4_equilibration"
namd="bin/namd3_vanilla_gpu_mc"

# Run the equilibration step with taskset using the determined CPU core list
taskset -c "$namd_core_list" ./"$namd" +p"${NAMD_CORES}" +devices "${GPU_DEVICE}" "input/${equi_prefix}.inp" > "output/${equi_prefix}.out" &
wait
